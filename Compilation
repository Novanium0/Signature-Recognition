import matplotlib.pyplot as plt
import numpy as np

X,Y,nb=0,0,0    #ces variables vont nous servir pour calculer le barycentre

N=plt.imread("chat.jpg", "uint8") #on lit l'image

M=N.copy()     #on en fait une copie sinon on ne peut pas la modifier, l'image est en lecture seule

L,C,P=np.shape(N)   #on détermine le combre de lignes "L", de colonnes "C" et d'éléments dans un pixel "P"

for i in range(L):

    for j in range(C):   #on parcours tous les pixels

        if np.mean(M[i,j])<127:    #si la moyenne du triplet est "sombre"

            M[i,j]=[0,0,0]   # on met chaque composante à 0

            X+=i

            Y+=j       #on relève les coordonnées du pixel en question

            nb+=1      #on compte le nombre de pixel noirs

        else :

            M[i,j]=[255,255,255] #si le pixel est "clair" on met chaque composante à 255

X=round(X/nb)

Y=round(Y/nb)   #X et Y représentent les coordonnées du pixel du centre de gravité

dx=L//2-X

dy=C//2-Y   #on calcul de combien on doit décaler notre image

if X!=L and Y!=C : #si le centre de gravité est déja le centre de l'image, onn ne fait rien

    for i in range(dx,L-abs(dx)):

        for j in range(dy,C-abs(dy)): #ici le range est particulier pour pas avoir de dépassement d'indice et on prend la valeur absolue car dx et dx sont des valeurs algébriques

            if (M[i,j]!=[255,255,255]).all():  #si le pixel est déjà blanc, pas besoin de le déplacer, on ne veut déplacer que les pixels noirs

                M[i+dx,j+dy],M[i,j]=M[i,j],[255,255,255] #on fait une double affectation, le pixels i,j prend sa nouvelle position et est remplacé par un pixel blanc

def rotation(M,angle):
    ROT=np.array([np.cos(angle),-np.sin(angle),np.sin(angle),np.cos(angle)]) #on définit la matrice de rotation

    ROT=np.reshape(ROT,(2,2)) #je n'arrivais pas à la définir en 2x2 donc je la définis en 1x4 et je la reshape en 2x2

    return np.dot(M,ROT) #cette fonction retourne le produit M*ROT


plt.figure()
plt.imshow(M, interpolation='nearest')
plt.axis("off")
plt.show() #on affiche l'image

